name: CICD-moments

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: [aws-ec2]
    strategy:
      matrix:
        maven: ['3.9.6' ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Maven ${{ matrix.maven }} Action
        uses: s4u/setup-maven-action@v1.13.0
        with:
          java-version: 17
          maven-version: ${{ matrix.maven }}
      - name: Build project
        run: mvn clean package -DskipTests
      - name: Copy Jar File
        run: cp target/*.jar /home/ubuntu/app/app.jar

  deploy:
    needs: build
    runs-on: [aws-ec2]
    env:
      DATABASE_URL: ${{vars.DATABASE_URL}}
      DATABASE_USER: ${{vars.DATABASE_USER}}
      DATABASE_PASSWORD: ${{vars.DATABASE_PASSWORD}}
      SECRET_KEY: ${{vars.SECRET_KEY}}
      JWT_EXPIRATION: ${{vars.JWT_EXPIRATION}}
    steps:
      - name: Write File
        run: | 
          MULTI_LINES_TEXT = "spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect \n
            spring.jpa.hibernate.ddl-auto=none \n
            spring.jpa.hibernate.show-sql=true \n
            spring.datasource.url=$DATABASE_URL \n
            spring.datasource.username=$DATABASE_USER \n
            spring.datasource.password=$DATABASE_PASSWORD \n
            spring.application.name=sw-service \n
            server.servlet.context-path=/moments \n
            \n
            security.jwt.secret-key=$SECRET_KEY \n
            # 1h in millisecond \n
            security.jwt.expiration-time=$JWT_EXPIRATION \n"
          echo $MULTI_LINES_TEXT >> /home/ubuntu/app/applications.properties
      - name: Run systemctl
        run: sudo systemctl restart app.service